package com.comcast.crm.listnerutility;


import java.sql.SQLException;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;

import co.cast.DataBaseUtitlity.DatabaseUtility;
import co.cast.generic.FileUtility.ExcelUtility;
import co.cast.generic.FileUtility.FileUtility;
import co.cast.generic.FileUtility.JsonUtility;
import co.cast.generic.WebDriverUtitlity.JavaUtility;
import co.cast.generic.WebDriverUtitlity.WebDriverUtility;

public class BaseClass {

public 	DatabaseUtility db = new DatabaseUtility();
	public FileUtility fu = new FileUtility();
	public ExcelUtility ex = new ExcelUtility();
	public WebDriverUtility wd = new WebDriverUtility();
	public JavaUtility ju = new JavaUtility();
	public JsonUtility js = new JsonUtility();
	public WebDriver driver ;
public static  WebDriver sdriver;
	@BeforeSuite
	public void configBs() throws Throwable {
		System.out.println("==connect to db and report config==");
		db.getDbConnection();
	}

	//@Parameters("BROWSER")
	@BeforeClass
	public void configBc() throws Throwable {
		System.out.println("==launch a browser==");
		driver.manage().window().maximize();
		String browser =// BROWSER;
				fu.getDataFromPropertiesFile("browser");
		String url = fu.getDataFromPropertiesFile("url");

		// webdriver will become local variable @after class annotation requires ence
		// declare globally
		if (browser.equals("chrome")) {
			driver = new ChromeDriver();
		} else if (browser.equals("Firefox")) {
			driver = new FirefoxDriver();
		} else if (browser.equals("edge")) {
			driver = new EdgeDriver();
		} else {
			driver = new ChromeDriver();
		}
		sdriver=driver;
		driver.get(url);
	}
	

	@BeforeMethod
	public void configBm() throws Throwable {
		System.out.println("==login==");
		Login lo = new Login(driver);
		String un = fu.getDataFromPropertiesFile("username");
		String pwd = fu.getDataFromPropertiesFile("password");

		lo.loginToApp(un, pwd);
	}

	@AfterMethod
	public void configAM() throws Exception {
		System.out.println("==logout==");
	home hp=new home(driver);
		hp.logout();
	}

	@AfterClass
	public void configAc() {
		System.out.println("==close browser");
		driver.quit();
	}

	@AfterSuite
	public void configAs() throws SQLException {
		System.out.println("==colse db and report backup==");
		db.closeDbconnection();
	}
	
}
